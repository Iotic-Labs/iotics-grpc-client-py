# Generated by the Protocol Buffers compiler. DO NOT EDIT!
# source: iotics/api/meta.proto
# plugin: grpclib.plugin.main
import abc
import typing

import grpclib.const
import grpclib.client
if typing.TYPE_CHECKING:
    import grpclib.server

import google.rpc.status_pb2
import iotics.api.common_pb2
import iotics.api.meta_pb2


class MetaAPIBase(abc.ABC):

    @abc.abstractmethod
    async def SparqlQuery(self, stream: 'grpclib.server.Stream[iotics.api.meta_pb2.SparqlQueryRequest, iotics.api.meta_pb2.SparqlQueryResponse]') -> None:
        pass

    @abc.abstractmethod
    async def SparqlUpdate(self, stream: 'grpclib.server.Stream[iotics.api.meta_pb2.SparqlUpdateRequest, iotics.api.meta_pb2.SparqlUpdateResponse]') -> None:
        pass

    @abc.abstractmethod
    async def ExplorerQuery(self, stream: 'grpclib.server.Stream[iotics.api.meta_pb2.ExplorerRequest, iotics.api.meta_pb2.SparqlQueryResponse]') -> None:
        pass

    def __mapping__(self) -> typing.Dict[str, grpclib.const.Handler]:
        return {
            '/iotics.api.MetaAPI/SparqlQuery': grpclib.const.Handler(
                self.SparqlQuery,
                grpclib.const.Cardinality.UNARY_STREAM,
                iotics.api.meta_pb2.SparqlQueryRequest,
                iotics.api.meta_pb2.SparqlQueryResponse,
            ),
            '/iotics.api.MetaAPI/SparqlUpdate': grpclib.const.Handler(
                self.SparqlUpdate,
                grpclib.const.Cardinality.UNARY_UNARY,
                iotics.api.meta_pb2.SparqlUpdateRequest,
                iotics.api.meta_pb2.SparqlUpdateResponse,
            ),
            '/iotics.api.MetaAPI/ExplorerQuery': grpclib.const.Handler(
                self.ExplorerQuery,
                grpclib.const.Cardinality.UNARY_STREAM,
                iotics.api.meta_pb2.ExplorerRequest,
                iotics.api.meta_pb2.SparqlQueryResponse,
            ),
        }


class MetaAPIStub:

    def __init__(self, channel: grpclib.client.Channel) -> None:
        self.SparqlQuery = grpclib.client.UnaryStreamMethod(
            channel,
            '/iotics.api.MetaAPI/SparqlQuery',
            iotics.api.meta_pb2.SparqlQueryRequest,
            iotics.api.meta_pb2.SparqlQueryResponse,
        )
        self.SparqlUpdate = grpclib.client.UnaryUnaryMethod(
            channel,
            '/iotics.api.MetaAPI/SparqlUpdate',
            iotics.api.meta_pb2.SparqlUpdateRequest,
            iotics.api.meta_pb2.SparqlUpdateResponse,
        )
        self.ExplorerQuery = grpclib.client.UnaryStreamMethod(
            channel,
            '/iotics.api.MetaAPI/ExplorerQuery',
            iotics.api.meta_pb2.ExplorerRequest,
            iotics.api.meta_pb2.SparqlQueryResponse,
        )

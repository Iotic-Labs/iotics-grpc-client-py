"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import iotics.api.common_pb2
import iotics.api.feed_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class Twin(google.protobuf.message.Message):
    """Twin is the virtual representation of a (physical, purely virtual or hybrid) device,
    is only ever located in the host it was created.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    ID_FIELD_NUMBER: builtins.int
    VISIBILITY_FIELD_NUMBER: builtins.int
    @property
    def id(self) -> iotics.api.common_pb2.TwinID:
        """Unique ID of the twin, assigned by the user."""
        pass
    visibility: iotics.api.common_pb2.Visibility.ValueType
    """Visibility of this twin"""

    def __init__(self,
        *,
        id: typing.Optional[iotics.api.common_pb2.TwinID] = ...,
        visibility: iotics.api.common_pb2.Visibility.ValueType = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["id",b"id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["id",b"id","visibility",b"visibility"]) -> None: ...
global___Twin = Twin

class ListAllTwinsRequest(google.protobuf.message.Message):
    """List all twins."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    HEADERS_FIELD_NUMBER: builtins.int
    RANGE_FIELD_NUMBER: builtins.int
    @property
    def headers(self) -> iotics.api.common_pb2.Headers: ...
    @property
    def range(self) -> iotics.api.common_pb2.Range:
        """Listing result range"""
        pass
    def __init__(self,
        *,
        headers: typing.Optional[iotics.api.common_pb2.Headers] = ...,
        range: typing.Optional[iotics.api.common_pb2.Range] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["headers",b"headers","range",b"range"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["headers",b"headers","range",b"range"]) -> None: ...
global___ListAllTwinsRequest = ListAllTwinsRequest

class ListAllTwinsResponse(google.protobuf.message.Message):
    """Response of the list all twins request.
    Note this is useful for sync responses. In case there are too many twins (millions)
    this request may fail. Better opt for async behaviour via stomp/websocket.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class TwinDetails(google.protobuf.message.Message):
        """ListAllTwinsResponse twin details."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        ID_FIELD_NUMBER: builtins.int
        VISIBILITY_FIELD_NUMBER: builtins.int
        LOCATION_FIELD_NUMBER: builtins.int
        PROPERTIES_FIELD_NUMBER: builtins.int
        @property
        def id(self) -> iotics.api.common_pb2.TwinID:
            """Twin identifier."""
            pass
        visibility: iotics.api.common_pb2.Visibility.ValueType
        """Twin visibility. Enum that defines a twins level of visibility."""

        @property
        def location(self) -> iotics.api.common_pb2.GeoLocation:
            """Twin location (if set)."""
            pass
        @property
        def properties(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[iotics.api.common_pb2.Property]:
            """Twin custom properties."""
            pass
        def __init__(self,
            *,
            id: typing.Optional[iotics.api.common_pb2.TwinID] = ...,
            visibility: iotics.api.common_pb2.Visibility.ValueType = ...,
            location: typing.Optional[iotics.api.common_pb2.GeoLocation] = ...,
            properties: typing.Optional[typing.Iterable[iotics.api.common_pb2.Property]] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["id",b"id","location",b"location"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["id",b"id","location",b"location","properties",b"properties","visibility",b"visibility"]) -> None: ...

    class Payload(google.protobuf.message.Message):
        """Payload of listed twins."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        TWINS_FIELD_NUMBER: builtins.int
        @property
        def twins(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ListAllTwinsResponse.TwinDetails]: ...
        def __init__(self,
            *,
            twins: typing.Optional[typing.Iterable[global___ListAllTwinsResponse.TwinDetails]] = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["twins",b"twins"]) -> None: ...

    HEADERS_FIELD_NUMBER: builtins.int
    PAYLOAD_FIELD_NUMBER: builtins.int
    @property
    def headers(self) -> iotics.api.common_pb2.Headers: ...
    @property
    def payload(self) -> global___ListAllTwinsResponse.Payload: ...
    def __init__(self,
        *,
        headers: typing.Optional[iotics.api.common_pb2.Headers] = ...,
        payload: typing.Optional[global___ListAllTwinsResponse.Payload] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["headers",b"headers","payload",b"payload"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["headers",b"headers","payload",b"payload"]) -> None: ...
global___ListAllTwinsResponse = ListAllTwinsResponse

class CreateTwinRequest(google.protobuf.message.Message):
    """CreateTwinRequest is made to create a twin (idempotent)."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class Payload(google.protobuf.message.Message):
        """Arguments identifies the twin to create."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        TWINID_FIELD_NUMBER: builtins.int
        @property
        def twinId(self) -> iotics.api.common_pb2.TwinID:
            """Unique ID of the twin to create"""
            pass
        def __init__(self,
            *,
            twinId: typing.Optional[iotics.api.common_pb2.TwinID] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["twinId",b"twinId"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["twinId",b"twinId"]) -> None: ...

    HEADERS_FIELD_NUMBER: builtins.int
    PAYLOAD_FIELD_NUMBER: builtins.int
    @property
    def headers(self) -> iotics.api.common_pb2.Headers:
        """Common headers"""
        pass
    @property
    def payload(self) -> global___CreateTwinRequest.Payload:
        """Request-specific payload"""
        pass
    def __init__(self,
        *,
        headers: typing.Optional[iotics.api.common_pb2.Headers] = ...,
        payload: typing.Optional[global___CreateTwinRequest.Payload] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["headers",b"headers","payload",b"payload"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["headers",b"headers","payload",b"payload"]) -> None: ...
global___CreateTwinRequest = CreateTwinRequest

class CreateTwinResponse(google.protobuf.message.Message):
    """CreateTwinResponse is received when a twin has been created."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class Payload(google.protobuf.message.Message):
        """Payload identifies the twin which was created."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        TWINID_FIELD_NUMBER: builtins.int
        @property
        def twinId(self) -> iotics.api.common_pb2.TwinID:
            """Unique ID of the twin to delete"""
            pass
        def __init__(self,
            *,
            twinId: typing.Optional[iotics.api.common_pb2.TwinID] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["twinId",b"twinId"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["twinId",b"twinId"]) -> None: ...

    HEADERS_FIELD_NUMBER: builtins.int
    PAYLOAD_FIELD_NUMBER: builtins.int
    @property
    def headers(self) -> iotics.api.common_pb2.Headers:
        """Common headers"""
        pass
    @property
    def payload(self) -> global___CreateTwinResponse.Payload:
        """Request-specific payload"""
        pass
    def __init__(self,
        *,
        headers: typing.Optional[iotics.api.common_pb2.Headers] = ...,
        payload: typing.Optional[global___CreateTwinResponse.Payload] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["headers",b"headers","payload",b"payload"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["headers",b"headers","payload",b"payload"]) -> None: ...
global___CreateTwinResponse = CreateTwinResponse

class DeleteTwinRequest(google.protobuf.message.Message):
    """---------------------------------------

    DeleteRequest is made to delete a particular twin.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class Arguments(google.protobuf.message.Message):
        """Arguments identifies the twin to delete."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        TWINID_FIELD_NUMBER: builtins.int
        @property
        def twinId(self) -> iotics.api.common_pb2.TwinID:
            """Unique ID of the twin to delete"""
            pass
        def __init__(self,
            *,
            twinId: typing.Optional[iotics.api.common_pb2.TwinID] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["twinId",b"twinId"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["twinId",b"twinId"]) -> None: ...

    HEADERS_FIELD_NUMBER: builtins.int
    ARGS_FIELD_NUMBER: builtins.int
    @property
    def headers(self) -> iotics.api.common_pb2.Headers:
        """Common headers"""
        pass
    @property
    def args(self) -> global___DeleteTwinRequest.Arguments:
        """Request-specific arguments"""
        pass
    def __init__(self,
        *,
        headers: typing.Optional[iotics.api.common_pb2.Headers] = ...,
        args: typing.Optional[global___DeleteTwinRequest.Arguments] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["args",b"args","headers",b"headers"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["args",b"args","headers",b"headers"]) -> None: ...
global___DeleteTwinRequest = DeleteTwinRequest

class DeleteTwinResponse(google.protobuf.message.Message):
    """Deleted is received when a twin has been deleted."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class Payload(google.protobuf.message.Message):
        """Payload identifies the twin which was deleted."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        TWINID_FIELD_NUMBER: builtins.int
        @property
        def twinId(self) -> iotics.api.common_pb2.TwinID:
            """Unique ID of the twin to delete"""
            pass
        def __init__(self,
            *,
            twinId: typing.Optional[iotics.api.common_pb2.TwinID] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["twinId",b"twinId"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["twinId",b"twinId"]) -> None: ...

    HEADERS_FIELD_NUMBER: builtins.int
    PAYLOAD_FIELD_NUMBER: builtins.int
    @property
    def headers(self) -> iotics.api.common_pb2.Headers:
        """Common headers"""
        pass
    @property
    def payload(self) -> global___DeleteTwinResponse.Payload:
        """Request-specific response"""
        pass
    def __init__(self,
        *,
        headers: typing.Optional[iotics.api.common_pb2.Headers] = ...,
        payload: typing.Optional[global___DeleteTwinResponse.Payload] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["headers",b"headers","payload",b"payload"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["headers",b"headers","payload",b"payload"]) -> None: ...
global___DeleteTwinResponse = DeleteTwinResponse

class DescribeTwinRequest(google.protobuf.message.Message):
    """Description of twin: Provides public metadata lookup for individual resources."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class Arguments(google.protobuf.message.Message):
        """Only one action argument is necessary."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        TWINID_FIELD_NUMBER: builtins.int
        REMOTEHOSTID_FIELD_NUMBER: builtins.int
        @property
        def twinId(self) -> iotics.api.common_pb2.TwinID:
            """unique id of the twin to describe"""
            pass
        @property
        def remoteHostId(self) -> iotics.api.common_pb2.HostID:
            """optional HostID to describe a remote twin"""
            pass
        def __init__(self,
            *,
            twinId: typing.Optional[iotics.api.common_pb2.TwinID] = ...,
            remoteHostId: typing.Optional[iotics.api.common_pb2.HostID] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["remoteHostId",b"remoteHostId","twinId",b"twinId"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["remoteHostId",b"remoteHostId","twinId",b"twinId"]) -> None: ...

    HEADERS_FIELD_NUMBER: builtins.int
    ARGS_FIELD_NUMBER: builtins.int
    @property
    def headers(self) -> iotics.api.common_pb2.Headers: ...
    @property
    def args(self) -> global___DescribeTwinRequest.Arguments: ...
    def __init__(self,
        *,
        headers: typing.Optional[iotics.api.common_pb2.Headers] = ...,
        args: typing.Optional[global___DescribeTwinRequest.Arguments] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["args",b"args","headers",b"headers"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["args",b"args","headers",b"headers"]) -> None: ...
global___DescribeTwinRequest = DescribeTwinRequest

class FeedMeta(google.protobuf.message.Message):
    """Metadata message for this Feed."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    FEEDID_FIELD_NUMBER: builtins.int
    STORELAST_FIELD_NUMBER: builtins.int
    @property
    def feedId(self) -> iotics.api.common_pb2.FeedID: ...
    storeLast: builtins.bool
    def __init__(self,
        *,
        feedId: typing.Optional[iotics.api.common_pb2.FeedID] = ...,
        storeLast: builtins.bool = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["feedId",b"feedId"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["feedId",b"feedId","storeLast",b"storeLast"]) -> None: ...
global___FeedMeta = FeedMeta

class DescribeTwinResponse(google.protobuf.message.Message):
    """The response for a description request on this twin."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class MetaResult(google.protobuf.message.Message):
        """Metadata result data bag for this feed."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        LOCATION_FIELD_NUMBER: builtins.int
        FEEDS_FIELD_NUMBER: builtins.int
        PROPERTIES_FIELD_NUMBER: builtins.int
        @property
        def location(self) -> iotics.api.common_pb2.GeoLocation: ...
        @property
        def feeds(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___FeedMeta]: ...
        @property
        def properties(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[iotics.api.common_pb2.Property]:
            """Custom properties associated with this twin."""
            pass
        def __init__(self,
            *,
            location: typing.Optional[iotics.api.common_pb2.GeoLocation] = ...,
            feeds: typing.Optional[typing.Iterable[global___FeedMeta]] = ...,
            properties: typing.Optional[typing.Iterable[iotics.api.common_pb2.Property]] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["location",b"location"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["feeds",b"feeds","location",b"location","properties",b"properties"]) -> None: ...

    class Payload(google.protobuf.message.Message):
        """Payload of described twins."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        TWIN_FIELD_NUMBER: builtins.int
        RESULT_FIELD_NUMBER: builtins.int
        REMOTEHOSTID_FIELD_NUMBER: builtins.int
        @property
        def twin(self) -> global___Twin:
            """the twin"""
            pass
        @property
        def result(self) -> global___DescribeTwinResponse.MetaResult:
            """the description details"""
            pass
        @property
        def remoteHostId(self) -> iotics.api.common_pb2.HostID:
            """optional - if present indicates this response comes from a remote host"""
            pass
        def __init__(self,
            *,
            twin: typing.Optional[global___Twin] = ...,
            result: typing.Optional[global___DescribeTwinResponse.MetaResult] = ...,
            remoteHostId: typing.Optional[iotics.api.common_pb2.HostID] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["remoteHostId",b"remoteHostId","result",b"result","twin",b"twin"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["remoteHostId",b"remoteHostId","result",b"result","twin",b"twin"]) -> None: ...

    HEADERS_FIELD_NUMBER: builtins.int
    PAYLOAD_FIELD_NUMBER: builtins.int
    @property
    def headers(self) -> iotics.api.common_pb2.Headers: ...
    @property
    def payload(self) -> global___DescribeTwinResponse.Payload: ...
    def __init__(self,
        *,
        headers: typing.Optional[iotics.api.common_pb2.Headers] = ...,
        payload: typing.Optional[global___DescribeTwinResponse.Payload] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["headers",b"headers","payload",b"payload"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["headers",b"headers","payload",b"payload"]) -> None: ...
global___DescribeTwinResponse = DescribeTwinResponse

class VisibilityUpdate(google.protobuf.message.Message):
    """---------------------------------------

    VisibilityUpdate describes the update of a twin visibility.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    VISIBILITY_FIELD_NUMBER: builtins.int
    visibility: iotics.api.common_pb2.Visibility.ValueType
    """New visibility for this twin"""

    def __init__(self,
        *,
        visibility: iotics.api.common_pb2.Visibility.ValueType = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["visibility",b"visibility"]) -> None: ...
global___VisibilityUpdate = VisibilityUpdate

class GeoLocationUpdate(google.protobuf.message.Message):
    """GeoLocationUpdate describes the update of a twin location."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    LOCATION_FIELD_NUMBER: builtins.int
    @property
    def location(self) -> iotics.api.common_pb2.GeoLocation:
        """New location of the twin. If unset, the previously set location will be removed"""
        pass
    def __init__(self,
        *,
        location: typing.Optional[iotics.api.common_pb2.GeoLocation] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["location",b"location"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["location",b"location"]) -> None: ...
global___GeoLocationUpdate = GeoLocationUpdate

class UpdateTwinRequest(google.protobuf.message.Message):
    """UpdateTwinRequest is used to update attributes (including metadata) of a given twin."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class Arguments(google.protobuf.message.Message):
        """UpdateTwinRequest mandatory arguments."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        TWINID_FIELD_NUMBER: builtins.int
        @property
        def twinId(self) -> iotics.api.common_pb2.TwinID:
            """Unique ID of the twin to update"""
            pass
        def __init__(self,
            *,
            twinId: typing.Optional[iotics.api.common_pb2.TwinID] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["twinId",b"twinId"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["twinId",b"twinId"]) -> None: ...

    class Payload(google.protobuf.message.Message):
        """UpdateTwinRequest payload. One or more fields can be provided, depending on what needs to be updated.
        Note that the specified metadata changes are applied in the following order:
        tags, visibility, properties, labels, comments, location
        """
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        NEWVISIBILITY_FIELD_NUMBER: builtins.int
        PROPERTIES_FIELD_NUMBER: builtins.int
        LOCATION_FIELD_NUMBER: builtins.int
        @property
        def newVisibility(self) -> global___VisibilityUpdate:
            """New visibility"""
            pass
        @property
        def properties(self) -> iotics.api.common_pb2.PropertyUpdate:
            """Custom properties to add/remove. Internal properties (such as location) cannot be modified here."""
            pass
        @property
        def location(self) -> global___GeoLocationUpdate:
            """Location to be set/unset"""
            pass
        def __init__(self,
            *,
            newVisibility: typing.Optional[global___VisibilityUpdate] = ...,
            properties: typing.Optional[iotics.api.common_pb2.PropertyUpdate] = ...,
            location: typing.Optional[global___GeoLocationUpdate] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["location",b"location","newVisibility",b"newVisibility","properties",b"properties"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["location",b"location","newVisibility",b"newVisibility","properties",b"properties"]) -> None: ...

    HEADERS_FIELD_NUMBER: builtins.int
    ARGS_FIELD_NUMBER: builtins.int
    PAYLOAD_FIELD_NUMBER: builtins.int
    @property
    def headers(self) -> iotics.api.common_pb2.Headers:
        """UpdateTwinRequest headers"""
        pass
    @property
    def args(self) -> global___UpdateTwinRequest.Arguments:
        """UpdateTwinRequest arguments"""
        pass
    @property
    def payload(self) -> global___UpdateTwinRequest.Payload:
        """UpdateTwinRequest payload"""
        pass
    def __init__(self,
        *,
        headers: typing.Optional[iotics.api.common_pb2.Headers] = ...,
        args: typing.Optional[global___UpdateTwinRequest.Arguments] = ...,
        payload: typing.Optional[global___UpdateTwinRequest.Payload] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["args",b"args","headers",b"headers","payload",b"payload"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["args",b"args","headers",b"headers","payload",b"payload"]) -> None: ...
global___UpdateTwinRequest = UpdateTwinRequest

class UpdateTwinResponse(google.protobuf.message.Message):
    """UpdateTwinResponse describes an updated twin. It is received when the update operation is successful."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class Payload(google.protobuf.message.Message):
        """UpdateTwinResponse payload."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        TWINID_FIELD_NUMBER: builtins.int
        @property
        def twinId(self) -> iotics.api.common_pb2.TwinID:
            """Unique ID of the twin to delete"""
            pass
        def __init__(self,
            *,
            twinId: typing.Optional[iotics.api.common_pb2.TwinID] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["twinId",b"twinId"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["twinId",b"twinId"]) -> None: ...

    HEADERS_FIELD_NUMBER: builtins.int
    PAYLOAD_FIELD_NUMBER: builtins.int
    @property
    def headers(self) -> iotics.api.common_pb2.Headers:
        """UpdateTwinResponse headers"""
        pass
    @property
    def payload(self) -> global___UpdateTwinResponse.Payload:
        """UpdateTwinResponse payload"""
        pass
    def __init__(self,
        *,
        headers: typing.Optional[iotics.api.common_pb2.Headers] = ...,
        payload: typing.Optional[global___UpdateTwinResponse.Payload] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["headers",b"headers","payload",b"payload"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["headers",b"headers","payload",b"payload"]) -> None: ...
global___UpdateTwinResponse = UpdateTwinResponse

class UpsertTwinRequest(google.protobuf.message.Message):
    """UpsertTwinRequest describes the full state of a twin + its feeds to create or update (full update)"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class Payload(google.protobuf.message.Message):
        """UpsertTwinRequest payload. This state will be applied to the twin/feeds"""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        TWINID_FIELD_NUMBER: builtins.int
        VISIBILITY_FIELD_NUMBER: builtins.int
        PROPERTIES_FIELD_NUMBER: builtins.int
        LOCATION_FIELD_NUMBER: builtins.int
        FEEDS_FIELD_NUMBER: builtins.int
        twinId: typing.Text
        """Unique ID of the twin to create/update"""

        visibility: iotics.api.common_pb2.Visibility.ValueType
        """Twin visibility. Default value: 'PRIVATE'"""

        @property
        def properties(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[iotics.api.common_pb2.Property]:
            """Twin Properties to set"""
            pass
        @property
        def location(self) -> iotics.api.common_pb2.GeoLocation:
            """Twin location to set. If not set the Twin will have no location"""
            pass
        @property
        def feeds(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[iotics.api.feed_pb2.UpsertFeedWithMeta]:
            """Feeds with metadata to set to the twin"""
            pass
        def __init__(self,
            *,
            twinId: typing.Text = ...,
            visibility: iotics.api.common_pb2.Visibility.ValueType = ...,
            properties: typing.Optional[typing.Iterable[iotics.api.common_pb2.Property]] = ...,
            location: typing.Optional[iotics.api.common_pb2.GeoLocation] = ...,
            feeds: typing.Optional[typing.Iterable[iotics.api.feed_pb2.UpsertFeedWithMeta]] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["location",b"location"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["feeds",b"feeds","location",b"location","properties",b"properties","twinId",b"twinId","visibility",b"visibility"]) -> None: ...

    HEADERS_FIELD_NUMBER: builtins.int
    PAYLOAD_FIELD_NUMBER: builtins.int
    @property
    def headers(self) -> iotics.api.common_pb2.Headers:
        """UpdateTwinRequest headers"""
        pass
    @property
    def payload(self) -> global___UpsertTwinRequest.Payload:
        """UpdateTwinRequest payload"""
        pass
    def __init__(self,
        *,
        headers: typing.Optional[iotics.api.common_pb2.Headers] = ...,
        payload: typing.Optional[global___UpsertTwinRequest.Payload] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["headers",b"headers","payload",b"payload"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["headers",b"headers","payload",b"payload"]) -> None: ...
global___UpsertTwinRequest = UpsertTwinRequest

class UpsertTwinResponse(google.protobuf.message.Message):
    """UpsertTwinResponse is received when a twin and its feeds have been created/updated."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class Payload(google.protobuf.message.Message):
        """Payload identifies the twin which was created."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        TWINID_FIELD_NUMBER: builtins.int
        twinId: typing.Text
        """created/updated twin"""

        def __init__(self,
            *,
            twinId: typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["twinId",b"twinId"]) -> None: ...

    HEADERS_FIELD_NUMBER: builtins.int
    PAYLOAD_FIELD_NUMBER: builtins.int
    @property
    def headers(self) -> iotics.api.common_pb2.Headers:
        """Common headers"""
        pass
    @property
    def payload(self) -> global___UpsertTwinResponse.Payload:
        """Request-specific payload"""
        pass
    def __init__(self,
        *,
        headers: typing.Optional[iotics.api.common_pb2.Headers] = ...,
        payload: typing.Optional[global___UpsertTwinResponse.Payload] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["headers",b"headers","payload",b"payload"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["headers",b"headers","payload",b"payload"]) -> None: ...
global___UpsertTwinResponse = UpsertTwinResponse

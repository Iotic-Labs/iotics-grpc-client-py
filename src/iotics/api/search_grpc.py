# Generated by the Protocol Buffers compiler. DO NOT EDIT!
# source: iotics/api/search.proto
# plugin: grpclib.plugin.main
import abc
import typing

import grpclib.const
import grpclib.client
if typing.TYPE_CHECKING:
    import grpclib.server

import google.protobuf.wrappers_pb2
import google.protobuf.timestamp_pb2
import google.rpc.status_pb2
import iotics.api.common_pb2
import iotics.api.feed_pb2
import iotics.api.input_pb2
import iotics.api.search_pb2


class SearchAPIBase(abc.ABC):

    @abc.abstractmethod
    async def DispatchSearchRequest(self, stream: 'grpclib.server.Stream[iotics.api.search_pb2.SearchRequest, iotics.api.search_pb2.DispatchSearchResponse]') -> None:
        pass

    @abc.abstractmethod
    async def SynchronousSearch(self, stream: 'grpclib.server.Stream[iotics.api.search_pb2.SearchRequest, iotics.api.search_pb2.SearchResponse]') -> None:
        pass

    @abc.abstractmethod
    async def ReceiveAllSearchResponses(self, stream: 'grpclib.server.Stream[iotics.api.common_pb2.SubscriptionHeaders, iotics.api.search_pb2.SearchResponse]') -> None:
        pass

    @abc.abstractmethod
    async def AdvancedSearch(self, stream: 'grpclib.server.Stream[iotics.api.search_pb2.AdvancedSearchRequest, iotics.api.search_pb2.SearchResponse]') -> None:
        pass

    def __mapping__(self) -> typing.Dict[str, grpclib.const.Handler]:
        return {
            '/iotics.api.SearchAPI/DispatchSearchRequest': grpclib.const.Handler(
                self.DispatchSearchRequest,
                grpclib.const.Cardinality.UNARY_UNARY,
                iotics.api.search_pb2.SearchRequest,
                iotics.api.search_pb2.DispatchSearchResponse,
            ),
            '/iotics.api.SearchAPI/SynchronousSearch': grpclib.const.Handler(
                self.SynchronousSearch,
                grpclib.const.Cardinality.UNARY_STREAM,
                iotics.api.search_pb2.SearchRequest,
                iotics.api.search_pb2.SearchResponse,
            ),
            '/iotics.api.SearchAPI/ReceiveAllSearchResponses': grpclib.const.Handler(
                self.ReceiveAllSearchResponses,
                grpclib.const.Cardinality.UNARY_STREAM,
                iotics.api.common_pb2.SubscriptionHeaders,
                iotics.api.search_pb2.SearchResponse,
            ),
            '/iotics.api.SearchAPI/AdvancedSearch': grpclib.const.Handler(
                self.AdvancedSearch,
                grpclib.const.Cardinality.UNARY_STREAM,
                iotics.api.search_pb2.AdvancedSearchRequest,
                iotics.api.search_pb2.SearchResponse,
            ),
        }


class SearchAPIStub:

    def __init__(self, channel: grpclib.client.Channel) -> None:
        self.DispatchSearchRequest = grpclib.client.UnaryUnaryMethod(
            channel,
            '/iotics.api.SearchAPI/DispatchSearchRequest',
            iotics.api.search_pb2.SearchRequest,
            iotics.api.search_pb2.DispatchSearchResponse,
        )
        self.SynchronousSearch = grpclib.client.UnaryStreamMethod(
            channel,
            '/iotics.api.SearchAPI/SynchronousSearch',
            iotics.api.search_pb2.SearchRequest,
            iotics.api.search_pb2.SearchResponse,
        )
        self.ReceiveAllSearchResponses = grpclib.client.UnaryStreamMethod(
            channel,
            '/iotics.api.SearchAPI/ReceiveAllSearchResponses',
            iotics.api.common_pb2.SubscriptionHeaders,
            iotics.api.search_pb2.SearchResponse,
        )
        self.AdvancedSearch = grpclib.client.UnaryStreamMethod(
            channel,
            '/iotics.api.SearchAPI/AdvancedSearch',
            iotics.api.search_pb2.AdvancedSearchRequest,
            iotics.api.search_pb2.SearchResponse,
        )

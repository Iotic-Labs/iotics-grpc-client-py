# Generated by the Protocol Buffers compiler. DO NOT EDIT!
# source: iotics/api/host.proto
# plugin: grpclib.plugin.main
import abc
import typing

import grpclib.const
import grpclib.client
if typing.TYPE_CHECKING:
    import grpclib.server

import iotics.api.common_pb2
import iotics.api.host_pb2


class HostAPIBase(abc.ABC):

    @abc.abstractmethod
    async def GetHostID(self, stream: 'grpclib.server.Stream[iotics.api.host_pb2.GetHostIDRequest, iotics.api.host_pb2.GetHostIDResponse]') -> None:
        pass

    def __mapping__(self) -> typing.Dict[str, grpclib.const.Handler]:
        return {
            '/iotics.api.HostAPI/GetHostID': grpclib.const.Handler(
                self.GetHostID,
                grpclib.const.Cardinality.UNARY_UNARY,
                iotics.api.host_pb2.GetHostIDRequest,
                iotics.api.host_pb2.GetHostIDResponse,
            ),
        }


class HostAPIStub:

    def __init__(self, channel: grpclib.client.Channel) -> None:
        self.GetHostID = grpclib.client.UnaryUnaryMethod(
            channel,
            '/iotics.api.HostAPI/GetHostID',
            iotics.api.host_pb2.GetHostIDRequest,
            iotics.api.host_pb2.GetHostIDResponse,
        )

"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
Copyright (c) 2019-2022 Iotic Labs Ltd. All rights reserved.

Iotics Web protocol definitions (input)
"""
import abc
import collections.abc
import grpc
import iotics.api.input_pb2

class InputAPIStub:
    """---------------------------------------------------------------------------------------------------------------------

    Input API groups all the actions link to a twin input.
    Services only affect local resources, unless stated otherwise.
    """

    def __init__(self, channel: grpc.Channel) -> None: ...
    DeleteInput: grpc.UnaryUnaryMultiCallable[
        iotics.api.input_pb2.DeleteInputRequest,
        iotics.api.input_pb2.DeleteInputResponse,
    ]
    """Deletes an input. (Idempotent)"""
    DescribeInput: grpc.UnaryUnaryMultiCallable[
        iotics.api.input_pb2.DescribeInputRequest,
        iotics.api.input_pb2.DescribeInputResponse,
    ]
    """Describes an input. (local and remote)"""
    ReceiveInputMessages: grpc.UnaryStreamMultiCallable[
        iotics.api.input_pb2.ReceiveInputMessageRequest,
        iotics.api.input_pb2.ReceiveInputMessageResponse,
    ]
    """Receives input messages for a specific input."""
    CreateInput: grpc.UnaryUnaryMultiCallable[
        iotics.api.input_pb2.CreateInputRequest,
        iotics.api.input_pb2.CreateInputResponse,
    ]
    """Creates an input owned by a twin. (Idempotent)"""
    UpdateInput: grpc.UnaryUnaryMultiCallable[
        iotics.api.input_pb2.UpdateInputRequest,
        iotics.api.input_pb2.UpdateInputResponse,
    ]
    """Updates attributes of an input, including its metadata."""

class InputAPIServicer(metaclass=abc.ABCMeta):
    """---------------------------------------------------------------------------------------------------------------------

    Input API groups all the actions link to a twin input.
    Services only affect local resources, unless stated otherwise.
    """

    @abc.abstractmethod
    def DeleteInput(
        self,
        request: iotics.api.input_pb2.DeleteInputRequest,
        context: grpc.ServicerContext,
    ) -> iotics.api.input_pb2.DeleteInputResponse:
        """Deletes an input. (Idempotent)"""
    @abc.abstractmethod
    def DescribeInput(
        self,
        request: iotics.api.input_pb2.DescribeInputRequest,
        context: grpc.ServicerContext,
    ) -> iotics.api.input_pb2.DescribeInputResponse:
        """Describes an input. (local and remote)"""
    @abc.abstractmethod
    def ReceiveInputMessages(
        self,
        request: iotics.api.input_pb2.ReceiveInputMessageRequest,
        context: grpc.ServicerContext,
    ) -> collections.abc.Iterator[iotics.api.input_pb2.ReceiveInputMessageResponse]:
        """Receives input messages for a specific input."""
    @abc.abstractmethod
    def CreateInput(
        self,
        request: iotics.api.input_pb2.CreateInputRequest,
        context: grpc.ServicerContext,
    ) -> iotics.api.input_pb2.CreateInputResponse:
        """Creates an input owned by a twin. (Idempotent)"""
    @abc.abstractmethod
    def UpdateInput(
        self,
        request: iotics.api.input_pb2.UpdateInputRequest,
        context: grpc.ServicerContext,
    ) -> iotics.api.input_pb2.UpdateInputResponse:
        """Updates attributes of an input, including its metadata."""

def add_InputAPIServicer_to_server(servicer: InputAPIServicer, server: grpc.Server) -> None: ...
